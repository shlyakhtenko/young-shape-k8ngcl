{"version":3,"file":"static/js/867.0e909d6b.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ProgressBar.js","pipeline_list/Pipeline_list.js","../node_modules/react-bootstrap/esm/ElementChildren.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;","import { useState, useContext, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { LoginContext } from \"../App\";\nimport { Navigate } from \"react-router-dom\";\nimport { Breadcrumb, Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport ErrorDialog from \"../ErrorDialog\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\n\nexport default function PipelineList() {\n  const [pipelines, setPipelines] = useState([]);\n  const [selectedPipeline, setSelectedPipeline] = useState(null);\n  const [errorDialog, setErrorDialog] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const loginToken = useContext(LoginContext);\n  const program_code = useParams().programCode;\n  const [loaded, setLoaded] = useState(false);\n\n  let get_pipelines = (eventCode, loginToken) => {\n    const headers = {\n      //authorization: \"Basic \" + loginToken\n    };\n    fetch(\n      \"https://docs.ipam.ucla.edu/cocytus/get_pipelines.php?ipam_id=\" +\n        loginToken.ipam_id +\n        \"&session_token=\" +\n        loginToken.session_token +\n        \"&programcode=\" +\n        eventCode,\n      {\n        method: \"GET\",\n        headers: headers,\n        mode: \"cors\",\n      },\n    )\n      .then((response) => {\n        response.json().then((data) => {\n          //console.log(\"get_pipelines returning:\", data);\n          setPipelines(data);\n          setLoaded(true);\n        });\n      })\n      .catch((error) => {\n        setErrorMessage(error.message);\n        setErrorDialog(true);\n      });\n  };\n\n  if (!loaded) get_pipelines(program_code, loginToken);\n\n  return (\n    <div className=\"pipelineList\">\n      {errorDialog ? (\n        <ErrorDialog\n          show={errorDialog}\n          message={errorMessage}\n          setter={setErrorDialog}\n        />\n      ) : null}\n      <div className=\"top_bar\">\n        <nav>\n          <Breadcrumb className=\"Breadcrumb\">\n            <Breadcrumb.Item href=\"/malebolge/\">Home</Breadcrumb.Item>\n            <Breadcrumb.Item active>{program_code}</Breadcrumb.Item>\n          </Breadcrumb>\n        </nav>\n      </div>\n      <Container>\n        <Row>\n          <h1>{program_code}: Available Pipelines</h1>\n          <ListGroup>\n            {console.log(\"pipelines\", pipelines)}\n            {pipelines.map((pipeline) => {\n              return (\n                <ListGroup.Item key={pipeline.name}>\n                  <a\n                    href={\n                      \"/malebolge/workshop/\" +\n                      program_code +\n                      \"/\" +\n                      pipeline.name\n                    }\n                  >\n                    {pipeline.caption}\n                  </a>\n                  {\" -- \"}\n                  Inputs: {pipeline.stats.inputs.total} cards, WIPS:{\" \"}\n                  {pipeline.stats.wips.total} cards, Outputs:{\" \"}\n                  {pipeline.stats.outputs.total} cards.\n                  <ProgressBar>\n                    <ProgressBar\n                      variant=\"danger\"\n                      now={\n                        (100 * pipeline.stats.inputs.brand_new) /\n                        pipeline.stats.total\n                      }\n                      key={1}\n                    />\n                    <ProgressBar\n                      striped\n                      variant=\"danger\"\n                      now={\n                        (100 *\n                          (pipeline.stats.inputs.total -\n                            pipeline.stats.inputs.brand_new)) /\n                        pipeline.stats.total\n                      }\n                      key={2}\n                    />\n                    <ProgressBar\n                      variant=\"warning\"\n                      now={\n                        (100 * pipeline.stats.wips.total) / pipeline.stats.total\n                      }\n                      key={3}\n                    />\n                    <ProgressBar\n                      variant=\"success\"\n                      now={\n                        (100 * pipeline.stats.outputs.total) /\n                        pipeline.stats.total\n                      }\n                      key={4}\n                    />\n                  </ProgressBar>\n                </ListGroup.Item>\n              );\n            })}\n          </ListGroup>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };"],"names":["ROUND_PRECISION","getPercentage","now","min","max","percentage","Math","round","renderProgressBar","_ref","ref","label","visuallyHidden","striped","animated","className","style","variant","bsPrefix","props","_jsx","role","classNames","concat","width","children","ProgressBar","React","_ref2","isChild","rest","useBootstrapPrefix","wrapperProps","map","child","cloneElement","displayName","PipelineList","pipelines","setPipelines","useState","selectedPipeline","setSelectedPipeline","errorDialog","setErrorDialog","errorMessage","setErrorMessage","loginToken","useContext","LoginContext","program_code","useParams","programCode","loaded","setLoaded","get_pipelines","eventCode","fetch","ipam_id","session_token","method","headers","mode","then","response","json","data","catch","error","message","_jsxs","ErrorDialog","show","setter","Breadcrumb","Item","href","active","Container","Row","ListGroup","console","log","pipeline","name","caption","stats","inputs","total","wips","outputs","brand_new","func","index","hasChildOfType","type","toArray","some"],"sourceRoot":""}