{"version":3,"file":"static/js/987.29b41897.chunk.js","mappings":"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","sources":["pipelines/attachment.js","pipelines/Card.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport FileViewer from \"react-file-viewer\";\n\nexport default function Attachment(props) {\n  const [showModal, setShowModal] = useState(false);\n  const url =\n    \"https://\" +\n    \"docs.ipam.ucla.edu\" +\n    props.url +\n    \"&ipam_id=\" +\n    props.ipam_id +\n    \"&session_token=\" +\n    props.session_token;\n  const date = new Date(props.date);\n  return (\n    <>\n      {showModal ? (\n        <div className=\"modal show attachmentModal\">\n          <Modal\n            show={showModal}\n            size=\"xl\"\n            onHide={() => setShowModal(false)}\n            centered\n          >\n            <Modal.Header closeButton>\n              <Modal.Title className=\"attachmentModalTitle\">\n                Attachment Display\n              </Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n              <div>\n                <div>Name: {props.name}</div>\n                <div>Date: {props.date}</div>\n                <div className=\"attachmentViewer\">\n                  <FileViewer\n                    zoom={203}\n                    fileType={props.type.split(\"/\")[1]}\n                    filePath={url}\n                    onError={() => setShowModal(false)}\n                  ></FileViewer>\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      ) : null}\n      <div className=\"attachment\" onDoubleClick={() => setShowModal(true)}>\n        <img src={props.icon_url}></img>\n        <div className=\"attachmentName\">{props.name}</div>\n        <div className=\"attachmentDate\">\n          {1 +\n            date.getMonth() +\n            \"/\" +\n            date.getDate() +\n            \"/\" +\n            date.getFullYear() +\n            \" \" +\n            (date.getHours() % 12) +\n            \":\" +\n            date.getMinutes() +\n            (date.getHours() >= 12 ? \"PM\" : \"AM\")}\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport Attachment from \"./attachment\";\n\n//import InputGroup from \"react-bootstrap/InputGroup\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\n\nexport default function PartCard(props) {\n  const [editor, setEditor] = useState(false);\n  const [modal, setModal] = useState(false);\n  //setEditor(false);\n\n  return (\n    <>\n      <Card\n        className={\n          \"Card\" +\n          (props.wilted ? \" wilted\" : \"\") +\n          (props.brand_new ? \" brand_new\" : \"\") +\n          (props.criteria_satisfied ? \"\" : \" criteria_not_satisfied \")\n        }\n      >\n        <Card.Body onDoubleClick={() => setModal(true)}>\n          <Card.Title>\n            {Object.entries(props.data).map(([name, c]) => {\n              return c.display_on_card ? (\n                <div\n                  key={name}\n                  className={\n                    (c.editable ? \"Editable\" : \"notEditable\") +\n                    \" \" +\n                    name.toString() +\n                    \" \" +\n                    c.edit_type\n                  }\n                >\n                  <span className=\"caption\">{c.caption}:</span>{\" \"}\n                  <span className={\"value \" + c.edit_type}>\n                    {c.edit_type != \"select_yesno\"\n                      ? c.value\n                      : c.value == null\n                        ? \"\"\n                        : c.value == 1\n                          ? \"Yes\"\n                          : \"No\"}\n                  </span>\n                </div>\n              ) : null;\n            })}\n          </Card.Title>\n          <Card.Body>\n            {Object.entries(props.data).map(([name, c]) => {\n              return !c.display_on_card && c.edit ? (\n                <div\n                  key={name}\n                  className={\n                    (c.editable ? \"Editable\" : \"notEditable\") +\n                    \" \" +\n                    name.toString() +\n                    \" \" +\n                    c.edit_type\n                  }\n                >\n                  <span className=\"caption\">{c.caption}:</span>{\" \"}\n                  <span className={\"value \" + c.edit_type}>\n                    {c.edit_type != \"select_yesno\"\n                      ? c.value\n                      : c.value == null\n                        ? \"\"\n                        : c.value == 1\n                          ? \"Yes\"\n                          : \"No\"}\n                  </span>\n                </div>\n              ) : null;\n            })}\n          </Card.Body>\n        </Card.Body>\n      </Card>\n      <CardEditor show={editor} setter={setEditor} />\n      {modal ? (\n        <CardModal\n          show={modal}\n          setter={setModal}\n          data={props.data}\n          card_id={props.card_id}\n          loginToken={props.loginToken}\n          pipeline_name={props.pipeline_name}\n          program_code={props.program_code}\n          update_card_data_function={props.update_card_data_function}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction CardEditor(props) {\n  return (\n    <div>\n      <Modal show={props.show} onHide={() => props.setter(false)}>\n        CardEditor\n        <Modal.Header closeButton></Modal.Header>\n      </Modal>\n    </div>\n  );\n}\n\nfunction get_attachments(\n  token,\n  setter,\n  card_id,\n  pipeline,\n  program_code,\n  raiseError,\n) {\n  const headers = {\n    //authorization: \"Basic \" + token\n  };\n  const url =\n    \"https://docs.ipam.ucla.edu/cocytus/get_associated_files.php?ipam_id=\" +\n    token.ipam_id +\n    \"&session_token=\" +\n    token.session_token +\n    \"&pipeline=\" +\n    pipeline +\n    \"&programcode=\" +\n    program_code +\n    \"&card_id=\" +\n    card_id;\n  fetch(url, { mode: \"cors\", method: \"GET\", headers })\n    .then((response) => {\n      console.log(\"get_attachments: url\", url);\n      response\n        .json()\n        .then((data) => {\n          console.log(\"get_attachments: Got data...\", data);\n          setter(data);\n          return;\n        })\n        .catch((err) => {\n          raiseError(\n            <div>\n              <h1>JSON conversion error</h1>\n              <h2>{\"\" + err}</h2>\n              <div>{\"url: \" + url} </div>\n              <div>\n                Check your login credentials and whether the pipline name is\n                valid\n              </div>\n            </div>,\n          );\n        });\n    })\n    .catch((err) => {\n      raiseError(\n        <div>\n          <h1>Data load error</h1>\n          <h2>{\"\" + err}</h2>\n          <div>{\"url: \" + url} </div>\n          <div>\n            Check your login credentials and whether the pipline name is valid\n          </div>\n        </div>,\n      );\n    });\n}\n\nfunction CardModal(props) {\n  var [field_values, setFieldValues] = useState(props.data);\n  var [attachmentsLoaded, setAttachmentsLoaded] = useState(false);\n  var [attachments, setAttachments] = useState([]);\n  var [dragOver, setDragOver] = useState(false);\n\n  if (!attachmentsLoaded) {\n    setAttachmentsLoaded(true);\n\n    get_attachments(\n      props.loginToken,\n      setAttachments,\n      props.card_id,\n      props.pipeline_name,\n      props.program_code,\n      console.log,\n    );\n  }\n\n  return (\n    <div className=\"modal show cardModal\">\n      <Modal\n        show={props.show}\n        size=\"lg\"\n        onHide={() => {\n          props.setter(false);\n          setFieldValues(props.data);\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"cardModalTitle\">\n            {Object.entries(props.data).map(([name, c]) => {\n              return c.display_on_card && !c.edit ? (\n                <div key={name}>\n                  <span className=\"value\">{c.value}</span>\n                </div>\n              ) : (\n                <div key={name}></div>\n              );\n            })}\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Form>\n            {Object.entries(field_values).map(([name, c]) => {\n              return c.edit ? (\n                <div key={name}>\n                  <Form.Group className=\"mb-3\">\n                    <FormLabel>{c.caption}</FormLabel>\n                    {c.edit_type == \"select_yesno\" ? (\n                      <Form.Select\n                        value={c.value}\n                        onChange={(e) => {\n                          setFieldValues({\n                            ...field_values,\n                            [name]: {\n                              ...field_values[name],\n                              value: e.target.value,\n                            },\n                          });\n                        }}\n                      >\n                        <option value={null}>Unknown</option>\n                        <option value={1}>Yes</option>\n                        <option value={0}>No</option>\n                      </Form.Select>\n                    ) : (\n                      <Form.Control\n                        as={c.edit_type == \"textarea\" ? \"textarea\" : \"input\"}\n                        rows={4}\n                        id={name}\n                        value={c.value ? c.value : \"\"}\n                        onChange={\n                          (e) => {\n                            setFieldValues({\n                              ...field_values,\n                              [name]: {\n                                ...field_values[name],\n                                value: e.target.value,\n                              },\n                            });\n                          }\n                          //(e) => props.save_function(name, e.target.value)\n                        }\n                      />\n                    )}\n                  </Form.Group>\n                </div>\n              ) : (\n                <div key={name}></div>\n              );\n            })}\n          </Form>\n          <FormLabel>Attachments</FormLabel>\n          <div\n            className={\"attachments\" + (dragOver ? \" dragOver\" : \"\")}\n            onDragOver={(e) => {\n              e.stopPropagation();\n              e.preventDefault();\n              setDragOver(true);\n            }}\n            onDragLeave={(e) => {\n              e.stopPropagation();\n              e.preventDefault();\n              setDragOver(false);\n            }}\n            onDrop={(e) => {\n              e.stopPropagation();\n              e.preventDefault();\n              let formData = null;\n              console.log(e);\n              Object.entries(e.dataTransfer.items).forEach(([k, item]) => {\n                if (item.kind == \"file\") {\n                  formData = new FormData();\n                  formData.append(\"attachment\", item.getAsFile());\n                  formData.append(\"card_id\", props.card_id);\n                  formData.append(\"pipeline\", props.pipeline_name);\n                  formData.append(\"program_code\", props.program_code);\n                  formData.append(\"userid\", props.data.userid.value);\n                  const headers = {\n                    //authorization: \"Basic \" + props.loginToken,\n                    // \"content-type\": \"multipart/form-data\",\n                  };\n                  console.log(\"headers\", headers, \"formdata:\", formData);\n                  const url =\n                    \"https://docs.ipam.ucla.edu/cocytus/upload_attachment.php?ipam_id=\" +\n                    props.loginToken.ipam_id +\n                    \"&session_token=\" +\n                    props.loginToken.session_token;\n                  fetch(url, {\n                    body: formData,\n                    mode: \"cors\",\n                    method: \"POST\",\n                    headers: headers,\n                  }).then((response) => {\n                    response\n                      .text()\n                      .then((data) =>\n                        console.log(\"uploaded file and got\", data),\n                      );\n                    setDragOver(false);\n                    setAttachmentsLoaded(false);\n                  });\n                }\n              });\n            }}\n          >\n            {attachments.map((a) => {\n              return (\n                <Attachment\n                  key={a.id}\n                  name={a.name}\n                  icon_url={a.icon_url}\n                  id={a.id}\n                  url={a.url}\n                  type={a.type}\n                  date={a.date}\n                  ipam_id={props.loginToken.ipam_id}\n                  session_token={props.loginToken.session_token}\n                />\n              );\n            })}\n          </div>{\" \"}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              props.setter(false);\n              console.log(field_values);\n              props.update_card_data_function(field_values);\n              /*Object.entries(field_values).map(([name, c]) => {\n                props.save_function(name, c.value);\n              });*/\n            }}\n          >\n            Save\n          </Button>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              props.setter(false);\n              setFieldValues(props.data);\n            }}\n          >\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n"],"names":["Attachment","props","showModal","setShowModal","useState","url","ipam_id","session_token","date","Date","_jsxs","_Fragment","children","_jsx","className","Modal","show","size","onHide","centered","Header","closeButton","Title","Body","name","FileViewer","zoom","fileType","type","split","filePath","onError","Footer","Button","variant","onClick","onDoubleClick","src","icon_url","getMonth","getDate","getFullYear","getHours","getMinutes","PartCard","editor","setEditor","modal","setModal","Card","wilted","brand_new","criteria_satisfied","Object","entries","data","map","_ref","c","display_on_card","editable","toString","edit_type","caption","value","_ref2","edit","CardEditor","setter","CardModal","card_id","loginToken","pipeline_name","program_code","update_card_data_function","field_values","setFieldValues","attachmentsLoaded","setAttachmentsLoaded","attachments","setAttachments","dragOver","setDragOver","token","pipeline","raiseError","fetch","mode","method","headers","then","response","console","log","json","catch","err","get_attachments","_ref3","Form","_ref4","Group","FormLabel","Select","onChange","e","target","Control","as","rows","id","onDragOver","stopPropagation","preventDefault","onDragLeave","onDrop","formData","dataTransfer","items","forEach","_ref5","k","item","kind","FormData","append","getAsFile","userid","body","text","a"],"sourceRoot":""}